version: 2.1
commands:
  npm-ci:
    description: "npm ci with cache"
    parameters:
      prefix:
        type: string
      path:
        type: string
    steps:
      - restore_cache:
          key: << parameters.prefix >>-{{ checksum "<< parameters.path >>/package-lock.json" }}
      - run:
          command: ADBLOCK=true npm ci
          working_directory: << parameters.path >>
      - save_cache:
          key: << parameters.prefix >>-{{ checksum "<< parameters.path >>/package-lock.json" }}
          paths:
            - << parameters.path >>/node_modules
executors:
  ionic-app:
    docker:
      - image: circleci/node:10
    working_directory: ~/hackernews-graphql

  go:
    docker:
      - image: circleci/golang:1.13
    working_directory: ~/hackernews-graphql

jobs:
  ionic-build:
    executor: ionic-app
    steps:
      - checkout
      - npm-ci:
          prefix: ionic-app
          path: ~/hackernews-graphql/ionic-app/
      - run:
          command: npm run build
          working_directory: ~/hackernews-graphql/ionic-app

  ionic-test:
    executor: ionic-app
    steps:
      - checkout
      - npm-ci:
          prefix: ionic-app
          path: ~/hackernews-graphql/ionic-app/
      - run:
          command: npm test
          working_directory: ~/hackernews-graphql/ionic-app

  server-build:
    executor: go
    steps:
      - checkout
      - run:
          command: go get -v -t -d ./...
          working_directory: ~/hackernews-graphql/server
      - run:
          command: make build
          working_directory: ~/hackernews-graphql/server

  server-test:
    executor: go
    steps:
      - checkout
      - run:
          command: go get -v -t -d ./...
          working_directory: ~/hackernews-graphql/server
      - run:
          command: make test
          working_directory: ~/hackernews-graphql/server

  build-docker-image:
    docker:
      - image: google/cloud-sdk
    environment:
      GCP_PROJECT: hackernews-252716
      IMAGE_NAME: app
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.05.0-ce
      - run:
          name: gcloud auth
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud --quiet auth configure-docker
      - run: docker build -t gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:latest .
      - run: docker push gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:latest
      - run: gcloud beta run deploy ${IMAGE_NAME} --image gcr.io/${GCP_PROJECT}/${IMAGE_NAME}:latest --region asia-northeast1 --platform managed

workflows:
  version: 2
  build_and_test:
    jobs:
      - ionic-build
      - ionic-test
      - server-build
      - server-test
  deploy:
    jobs:
      - build-docker-image:
          requires:
            - ionic-build
            - ionic-test
            - server-build
            - server-test
          # filters:
          #   branches:
          #     only: master
