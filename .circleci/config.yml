version: 2.1
commands:
  npm-ci:
    description: "npm ci with cache"
    parameters:
      prefix:
        type: string
      path:
        type: string
    steps:
      - restore_cache:
          key: << parameters.prefix >>-{{ checksum "<< parameters.path >>/package-lock.json" }}
      - run:
          command: ADBLOCK=true npm ci
          working_directory: << parameters.path >>
      - save_cache:
          key: << parameters.prefix >>-{{ checksum "<< parameters.path >>/package-lock.json" }}
          paths:
            - << parameters.path >>/node_modules
executors:
  ionic-app:
    docker:
      - image: circleci/node:10
    working_directory: ~/hackernews-graphql

  go:
    docker:
      - image: circleci/golang:1.15
    working_directory: ~/hackernews-graphql

jobs:
  ionic-build:
    executor: ionic-app
    steps:
      - checkout
      - npm-ci:
          prefix: ionic-app
          path: ~/hackernews-graphql/ionic-app/
      - run:
          command: npm run build
          working_directory: ~/hackernews-graphql/ionic-app

  ionic-test:
    executor: ionic-app
    steps:
      - checkout
      - npm-ci:
          prefix: ionic-app
          path: ~/hackernews-graphql/ionic-app/
      - run:
          command: npm test
          working_directory: ~/hackernews-graphql/ionic-app

  server-build:
    executor: go
    steps:
      - checkout
      - run:
          command: go get -v -t -d ./...
          working_directory: ~/hackernews-graphql/server
      - run:
          command: make build
          working_directory: ~/hackernews-graphql/server

  server-test:
    executor: go
    steps:
      - checkout
      - run:
          command: go get -v -t -d ./...
          working_directory: ~/hackernews-graphql/server
      - run:
          command: make test
          working_directory: ~/hackernews-graphql/server

  build-docker-image:
    docker:
      - image: google/cloud-sdk
    environment:
      GCP_PROJECT: hackernews-252716
      LOCATION: asia-northeast1
      REPOSITORY_NAME: hackernews-server
      IMAGE_NAME: app
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: gcloud auth
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet auth configure-docker ${LOCATION}-docker.pkg.dev
      - run:
          name: build docker image
          command: docker build -t ${LOCATION}-docker.pkg.dev/${GCP_PROJECT}/${REPOSITORY_NAME}/${IMAGE_NAME}:latest .
      - run:
          name: push docker image
          command: docker push ${LOCATION}-docker.pkg.dev/${GCP_PROJECT}/${REPOSITORY_NAME}/${IMAGE_NAME}:latest

  deploy-docker-image:
    docker:
      - image: google/cloud-sdk
    environment:
      GCP_PROJECT: hackernews-252716
      LOCATION: asia-northeast1
      REPOSITORY_NAME: hackernews-server
      IMAGE_NAME: app
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: gcloud auth
          command: |
            echo $GCLOUD_DEPLOY_CLOUD_RUN_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet auth configure-docker ${LOCATION}-docker.pkg.dev
      - run:
          name: set project
          command: gcloud config set project ${GCP_PROJECT}
      - run: gcloud run deploy app --image ${LOCATION}-docker.pkg.dev/${GCP_PROJECT}/${REPOSITORY_NAME}/${IMAGE_NAME}:latest --region=asia-southeast1 --platform managed

workflows:
  version: 2
  build:
    jobs:
      - ionic-build
      - ionic-test
      - server-build
      - server-test
      - build-docker-image:
          requires:
            - ionic-build
            - ionic-test
            - server-build
            - server-test
      - deploy-docker-image:
          requires:
            - build-docker-image
          filters:
            branches:
              only: master
